# prompts.py

import locale
from datetime import datetime

# Устанавливаем русскую локаль для корректного отображения названий месяцев
# Убедись, что локаль 'ru_RU.UTF-8' поддерживается твоей системой
try:
    locale.setlocale(locale.LC_TIME, 'ru_RU.UTF-8')
except locale.Error:
    print("Локаль 'ru_RU.UTF-8' не найдена. Даты могут отображаться на английском.")
    # Попытка установить стандартную локаль системы
    locale.setlocale(locale.LC_TIME, '')


def get_current_date():
    """Возвращает текущую дату в формате '09 июня 2025 г.'"""
    return datetime.now().strftime("%d %B %Y г.")


query_writer_instructions = """Твоя цель — сгенерировать продуманные и разнообразные поисковые запросы. Эти запросы предназначены для продвинутого автоматизированного инструмента веб-исследований, способного анализировать сложные результаты, переходить по ссылкам и обобщать информацию.

    Инструкции:
    - Всегда отдавай предпочтение одному поисковому запросу. Добавляй еще один запрос, только если исходный вопрос затрагивает несколько аспектов или элементов, и одного запроса недостаточно.
    - Каждый запрос должен быть сфокусирован на одном конкретном аспекте исходного вопроса.
    - Не создавай более {number_queries} запросов.
    - Запросы должны быть разнообразными. Если тема широкая, сгенерируй больше одного запроса.
    - Не создавай несколько похожих запросов, одного достаточно.
    - Запрос должен обеспечивать сбор самой актуальной информации. Текущая дата: {current_date}.

    Формат: 
    - Отформатируй свой ответ в виде объекта JSON с этими тремя точными ключами:
    - "rationale": Краткое объяснение, почему эти запросы релевантны.
    - "query": Список поисковых запросов.

    Пример:

    Тема: Чья выручка выросла больше в прошлом году: акций Apple или числа людей, покупающих iPhone?
    ```json
    {{
        "rationale": "Чтобы точно ответить на этот вопрос о сравнительном росте, нам нужны конкретные данные по акциям Apple и метрикам продаж iPhone. Эти запросы нацелены на получение точной финансовой информации: динамика выручки компании, данные о продажах конкретного продукта и движение цен на акции за тот же финансовый период для прямого сравнения.",
        "query": ["рост выручки Apple за 2024 финансовый год", "рост продаж iPhone в штуках за 2024 финансовый год", "рост цен на акции Apple за 2024 финансовый год"]
    }}
    Контекст: {research_topic}
"""

web_searcher_instructions = """Проведи целенаправленный поиск в DuckDuckGo, чтобы собрать самую свежую и достоверную информацию по теме "{research_topic}" и обобщи ее в виде проверяемого текстового артефакта.

    Инструкции:

    Запрос должен обеспечивать сбор самой актуальной информации. Текущая дата: {current_date}.
    Проведи несколько разнообразных поисков для сбора исчерпывающей информации.
    Объедини ключевые находки, тщательно отслеживая источник(и) для каждой конкретной части информации.
    Результатом должен быть хорошо написанный отчет на основе результатов твоего поиска.
    Включай только информацию, найденную в результатах поиска, ничего не выдумывай.
    Тема исследования:
    {research_topic}
"""

reflection_instructions = """Ты — эксперт-ассистент по исследованиям, анализирующий сводки по теме "{research_topic}".

    Инструкции:

    Определи пробелы в знаниях или области, требующие более глубокого изучения, и сгенерируй уточняющий запрос (один или несколько).
    Если предоставленных сводок достаточно для ответа на вопрос пользователя, не создавай уточняющий запрос.
    Если пробел в знаниях есть, сгенерируй уточняющий запрос, который поможет расширить твое понимание.
    Сконцентрируйся на технических деталях, особенностях реализации или новых тенденциях, которые не были полностью раскрыты.
    Требования:

    Убедись, что уточняющий запрос является самодостаточным и содержит необходимый контекст для веб-поиска.
    Формат вывода:

    Отформатируй свой ответ в виде объекта JSON с этими точными ключами:
    "is_sufficient": true или false
    "knowledge_gap": Опиши, какой информации не хватает или что требует уточнения.
    "follow_up_queries": Напиши конкретный вопрос для устранения этого пробела.
    Пример:
    ```json
    {{
        "is_sufficient": false,
        "knowledge_gap": "В сводке не хватает информации о метриках производительности и бенчмарках.",
        "follow_up_queries": ["Какие типовые бенчмарки и метрики производительности используются для оценки [конкретной технологии]?"]
    }}
    Внимательно проанализируй сводки, чтобы выявить пробелы в знаниях и создать уточняющий запрос. Затем выведи результат в указанном формате JSON.

    Сводки:
    {summaries}
"""

answer_instructions = """Сгенерируй качественный и полный ответ на вопрос пользователя на основе предоставленных сводок.

    Инструкции:

    Текущая дата: {current_date}.
    Ты — финальный шаг многоэтапного процесса исследования. Не упоминай, что это финальный шаг.
    У тебя есть доступ ко всей информации, собранной на предыдущих шагах.
    У тебя есть доступ к вопросу пользователя.
    Сгенерируй высококачественный ответ на вопрос пользователя, основываясь на предоставленных сводках и самом вопросе.
    Твой ответ должен быть исчерпывающим, хорошо структурированным и написан на русском языке.
    Контекст пользователя:

    {research_topic}
    Сводки:
    {summaries}
"""


router_prompt = """ТВОЯ ЗАДАЧА - КЛАССИФИКАЦИЯ. ВЕРНИ ТОЛЬКО JSON. НЕ ДУМАЙ. НЕ ОБЪЯСНЯЙ.

    Проанализируй запрос пользователя.
    Если для ответа нужна свежая информация из интернета (новости, факты, статистика, погода), выбери путь "research".
    Во всех остальных случаях (общий разговор, творчество, известные факты), выбери путь "simple_chat".

    Твой ответ должен быть ТОЛЬКО объектом JSON с одним ключом "path".

    Пример 1:
    Запрос: "сравни характеристики gemma-3-12b и llama-3-8b"
    Ответ:
    ```json
    {{
    "path": "research"
    }}
    ```
    Пример 2:
    Запрос: "напиши стих о зиме"
    Ответ:
    ```json
    {{
    "path": "simple_chat"
    }}
    ```
    ЗАПРОС ПОЛЬЗОВАТЕЛЯ: "{research_topic}"
    ТВОЙ ОТВЕТ (ТОЛЬКО JSON):
"""